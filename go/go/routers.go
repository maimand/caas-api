/*
 * PDAX
 *
 * PDAX Integration with GCash
 *
 * API version: 1.2.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name        string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method      string
	// Pattern is the pattern of the URI.
	Pattern     string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/caas-gcash-orchestrator/",
		Index,
	},

	{
		"GetSystemHealth",
		http.MethodGet,
		"/caas-gcash-orchestrator/gcash/system_health",
		GetSystemHealth,
	},

	{
		"FiatConfirm",
		http.MethodPost,
		"/caas-gcash-orchestrator/gcash/users/:userId/fiat_out_confirm",
		FiatConfirm,
	},

	{
		"FiatInConfirm",
		http.MethodPost,
		"/caas-gcash-orchestrator/gcash/users/:userId/fiat_in_confirm",
		FiatInConfirm,
	},

	{
		"FiatInRequest",
		http.MethodPost,
		"/caas-gcash-orchestrator/gcash/users/:userId/fiat_in_request",
		FiatInRequest,
	},

	{
		"FiatRequest",
		http.MethodPost,
		"/caas-gcash-orchestrator/gcash/users/:userId/fiat_out_request",
		FiatRequest,
	},

	{
		"GetCryptoPrice",
		http.MethodGet,
		"/caas-gcash-orchestrator/gcash/crypto_prices",
		GetCryptoPrice,
	},

	{
		"GetIdToken",
		http.MethodPost,
		"/caas-gcash-orchestrator/gcash/login",
		GetIdToken,
	},

	{
		"GetUserId",
		http.MethodPost,
		"/caas-gcash-orchestrator/gcash/get_user_id",
		GetUserId,
	},

	{
		"GetUserInfo",
		http.MethodPost,
		"/caas-gcash-orchestrator/gcash/users/:userId",
		GetUserInfo,
	},

	{
		"PostRiskProfile",
		http.MethodPost,
		"/caas-gcash-orchestrator/gcash/risk_profiles",
		PostRiskProfile,
	},

	{
		"RegisterUser",
		http.MethodPost,
		"/caas-gcash-orchestrator/gcash/users",
		RegisterUser,
	},

	{
		"SendOTP",
		http.MethodPost,
		"/caas-gcash-orchestrator/gcash/users/:userId/otp",
		SendOTP,
	},

	{
		"TestLogin",
		http.MethodPost,
		"/caas-gcash-orchestrator/gcash/login-test",
		TestLogin,
	},
}
